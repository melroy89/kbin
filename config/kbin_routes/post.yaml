post_comment_create:
  controller: App\Controller\Post\Comment\CommentCreateController
  defaults: { slug: -, parent_comment_id: null }
  path:
    en: /m/{magazine_name}/p/{post_id}/{slug}/reply/{parent_comment_id}
    pl: /m/{magazine_name}/w/{post_id}/{slug}/odpowiedź/{parent_comment_id}
  methods: [ GET, POST ]

post_comment_edit:
  controller: App\Controller\Post\Comment\CommentEditController
  defaults: { slug: -, }
  path:
    en: /m/{magazine_name}/p/{post_id}/{slug}/reply/{comment_id}/edit
    pl: /m/{magazine_name}/w/{post_id}/{slug}/odpowiedź/{comment_id}/edytuj
  methods: [ GET, POST ]

post_comment_delete:
  controller: App\Controller\Post\Comment\CommentDeleteController::delete
  defaults: { slug: -, }
  path: /m/{magazine_name}/p/{post_id}/{slug}/reply/{comment_id}/delete
  methods: [ POST ]

post_comment_restore:
  controller: App\Controller\Post\Comment\CommentDeleteController::restore
  defaults: { slug: -, }
  path: /m/{magazine_name}/p/{post_id}/{slug}/reply/{comment_id}/restore
  methods: [ POST ]

post_comment_purge:
  controller: App\Controller\Post\Comment\CommentDeleteController::purge
  defaults: { slug: -, }
  path: /m/{magazine_name}/p/{post_id}/{slug}/reply/{comment_id}/purge
  methods: [ POST ]

post_comment_image_delete:
  controller: App\Controller\Post\Comment\CommentDeleteImageController
  defaults: { slug: -, }
  path: /m/{magazine_name}/p/{post_id}/{slug}/reply/{comment_id}/delete_image
  methods: [ POST ]

post_comment_voters:
  controller: App\Controller\Post\Comment\PostCommentVotersController
  defaults: { slug: -, }
  path:
    en: /m/{magazine_name}/p/{post_id}/{slug}/reply/{comment_id}/votes
    pl: /m/{magazine_name}/w/{post_id}/{slug}/odpowiedź/{comment_id}/głosy
  methods: [ GET ]

post_comment_vote:
  controller: App\Controller\VoteController
  defaults: { entityClass: App\Entity\PostComment }
  path: /pcv/{id}/{choice}
  methods: [ POST ]

post_comment_report:
  controller: App\Controller\ReportController
  defaults: { entityClass: App\Entity\PostComment }
  path: /pcr/{id}
  methods: [ GET, POST ]

post_comment_favourite:
  controller: App\Controller\FavouriteController
  defaults: { entityClass: App\Entity\PostComment }
  path: /pcf/{id}
  methods: [ POST ]

posts_front:
  controller: App\Controller\Post\PostFrontController::front
  defaults: { sortBy: ~, time: ~ }
  path:
    en: /posts/{sortBy}/{time}
    pl: /wpisy/{sortBy}/{time}
  methods: [ GET ]
  requirements: { sortBy: "%front_sort_options%" }

posts_subscribed:
  controller: App\Controller\Post\PostFrontController::subscribed
  defaults: { sortBy: ~, time: ~ }
  path:
    en: /sub/posts/{sortBy}/{time}
    pl: /sub/wpisy/{sortBy}/{time}
  methods: [ GET ]
  requirements: { sortBy: "%front_sort_options%" }

posts_moderated:
  controller: App\Controller\Post\PostFrontController::moderated
  defaults: { sortBy: ~, time: ~ }
  path:
    en: /mod/posts/{sortBy}/{time}
    pl: /mod/wpisy/{sortBy}/{time}
  methods: [ GET ]
  requirements: { sortBy: "%front_sort_options%" }

magazine_posts:
  controller: App\Controller\Post\PostFrontController::magazine
  defaults: { sortBy: ~, time: ~ }
  path:
    en: /m/{name}/posts/{sortBy}/{time}
    pl: /m/{name}/wpisy/{sortBy}/{time}
  methods: [ GET ]
  requirements: { sortBy: "%front_sort_options%" }

post_voters:
  controller: App\Controller\Post\PostVotersController
  defaults: { slug: -, sortBy: ~ }
  path:
    en: /m/{magazine_name}/p/{post_id}/{slug}/votes
    pl: /m/{magazine_name}/w/{post_id}/{slug}/głosy
  methods: [ GET ]

post_single:
  controller: App\Controller\Post\PostSingleController
  defaults: { slug: -, }
  path:
    en: /m/{magazine_name}/p/{post_id}/{slug}
    pl: /m/{magazine_name}/w/{post_id}/{slug}
  methods: [ GET ]

post_create:
  controller: App\Controller\Post\PostCreateController
  path: /m/{name}/posts
  methods: [ POST ]

post_edit:
  controller: App\Controller\Post\PostEditController
  defaults: { slug: -, }
  path:
    en: /m/{magazine_name}/p/{post_id}/{slug}/edit
    pl: /m/{magazine_name}/w/{post_id}/{slug}/edytuj
  methods: [ GET, POST ]

post_delete:
  controller: App\Controller\Post\PostDeleteController::delete
  defaults: { slug: -, }
  path: /m/{magazine_name}/p/{post_id}/{slug}/delete
  methods: [ POST ]

post_restore:
  controller: App\Controller\Post\PostDeleteController::restore
  defaults: { slug: -, }
  path: /m/{magazine_name}/p/{post_id}/{slug}/restore
  methods: [ POST ]

post_purge:
  controller: App\Controller\Post\PostDeleteController::purge
  defaults: { slug: -, }
  path: /m/{magazine_name}/p/{post_id}/{slug}/purge
  methods: [ POST ]

post_image_delete:
  controller: App\Controller\Post\PostDeleteImageController
  defaults: { slug: -, }
  path: /m/{magazine_name}/p/{post_id}/{slug}/delete_image
  methods: [ POST ]

post:
  controller: App\Controller\Post\PostFrontController::front
  defaults: { slug: -, sortBy: ~ }
  path:
    en: /m/{magazine_name}/t/{post_id}/{slug}/{sortBy}
    pl: /m/{magazine_name}/w/{post_id}/{slug}/{sortBy}
  methods: [ GET ]

post_vote:
  controller: App\Controller\VoteController
  defaults: { entityClass: App\Entity\Post }
  path: /pv/{id}/{choice}
  methods: [ POST ]

post_report:
  controller: App\Controller\ReportController
  defaults: { entityClass: App\Entity\Post }
  path: /pr/{id}
  methods: [ GET, POST ]

post_favourite:
  controller: App\Controller\FavouriteController
  defaults: { entityClass: App\Entity\Post }
  path: /pf/{id}
  methods: [ POST ]
